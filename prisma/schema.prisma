// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
model User{
  id String @id @default(uuid())
  name String
  email String @unique
  password  String
  role userRoles
  passwordChange Boolean @default(true)
  admin     Admin?
  renter    Renter?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
model Admin {
  id            String   @id @unique @default(uuid())
  email         String   @unique
  name          String
  profilePhoto  String?
  contactNumber String?
  isDeleted     Boolean  @default(false)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  user User @relation(references: [email], fields: [email])

  @@map("admins")
}

model Renter {
  id            String   @id @unique @default(uuid())
  email         String   @unique
  name          String
  profilePhoto  String?
  contactNumber String?
  isDeleted     Boolean  @default(false)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  user User @relation(references: [email], fields: [email])

  @@map("renters")
}
enum userRoles{
  SuperAdmin
  Admin
  Renter
  Driver
}
model Vehicles{
  id String @id @default(uuid())
  model String
  category String
  brand String
  image String
  description String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  rent RentalPlan[]
}

model RentalPlan {
  id String @id @default(uuid())
  name rentalPlanName
  description String
  vehicleId String
  perDay Float
  perMonth Float
  perWeek Float
  vehicle Vehicles @relation(fields: [vehicleId],references: [id])
  
}
// model PricingPlan{
//    id String @id @default(uuid())
//    perDay Float
//    perMonth Float
//    perWeek Float
//    rentalPlanId String
//    rentPlan RentalPlan @relation(fields: [rentalPlanId],references: [id])
// }
enum rentalPlanName{
  Student
  Standard
  Premium
  
}